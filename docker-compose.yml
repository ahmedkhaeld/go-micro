version: '3'

services:

  broker-service:
    build: 
      context: ./broker-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8082:8080"
    deploy:
      mode: replicated
      replicas: 1
    
  logger-service:
    build: 
      context: ./logger-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8084:8080"
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    build:
      context: ./mail-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8085:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com


  auth-service:
    build: 
      context: ./authentication-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8083:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgresql-service port=5432 user=postgres password=postgres dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    depends_on:
      - postgresql-service

  listener-service:
    build:
      context: ./listener-service
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 1


  postgresql-service:
    image: postgres:16
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    volumes:
      - ./postgres-data:/var/lib/postgresql/data/
  mongo:
    image: 'mongo:6'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./mongo-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

     
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./rabbitmq-data/:/var/lib/rabbitmq/